<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>From the Terminal</title>
    <link>https://fromtheterminal.com/</link>
    <description>Recent content on From the Terminal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://fromtheterminal.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
    <title>Building a Light Display - Part 2</title>
    <link>https://fromtheterminal.com/post/barlights_part_2/</link>
    <pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate>
    <author>hackerman</author>
    <guid>https://fromtheterminal.com/post/barlights_part_2/</guid>
    <description>
        &lt;h1 id=&#34;connecting-the-neopixels-to-the-raspberry-pi&#34;&gt;
    &lt;a href=&#34;#connecting-the-neopixels-to-the-raspberry-pi&#34; class=&#34;anchor&#34;&gt;
        &lt;svg class=&#34;icon&#34; aria-hidden=&#34;true&#34; focusable=&#34;false&#34; height=&#34;16&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 16 16&#34; width=&#34;16&#34;&gt;
            &lt;path fill-rule=&#34;evenodd&#34;
                d=&#34;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&#34;&gt;
            &lt;/path&gt;
        &lt;/svg&gt;
    &lt;/a&gt;
    Connecting the NeoPixels to the Raspberry Pi
&lt;/h1&gt;
&lt;p&gt;This will likely be the shortest post in the series, as I do not have expertise
in electronics. I also cannot solder well, and I am sure my (surprisingly many)
electrical engineering friends will get a laugh. So, I will just describe
the steps I took.&lt;/p&gt;
&lt;p&gt;The Raspberry Pi outputs 3.3v and the NeoPixels or WS2811/2812 requires 5v. It
is possible to get some number of LEDs to work without a 5v power supply, but
it&amp;rsquo;s not the best solution. Going forward, I used the following schematic which
will use the Quad Level Shifter to convert the Raspberry Pi&amp;rsquo;s 3.3v to 5v. If
doing this project over, I would also add some capacitors as recommended by &lt;a href=&#34;https://learn.adafruit.com/adafruit-neopixel-uberguide/best-practices&#34;&gt;Neo
Pixel Best
Practices&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; 
    src=&#34;https://fromtheterminal.com/barlights/led_strips_raspi_NeoPixel_Level_Shifted_bb.jpg&#34; 
    alt=&#34;led strips raspi neopixel level
shifted&#34; 
     
    width=1623 
    height=&#34;1392&#34;  /&gt; &lt;cite&gt;Kattni
Rembor&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/cite&gt;&lt;/p&gt;
&lt;h2 id=&#34;required-items&#34;&gt;
    &lt;a href=&#34;#required-items&#34; class=&#34;anchor&#34;&gt;
        &lt;svg class=&#34;icon&#34; aria-hidden=&#34;true&#34; focusable=&#34;false&#34; height=&#34;16&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 16 16&#34; width=&#34;16&#34;&gt;
            &lt;path fill-rule=&#34;evenodd&#34;
                d=&#34;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&#34;&gt;
            &lt;/path&gt;
        &lt;/svg&gt;
    &lt;/a&gt;
    Required Items
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Raspberry Pi&lt;/li&gt;
&lt;li&gt;breadboard&lt;/li&gt;
&lt;li&gt;22 gauge solid core wire&lt;/li&gt;
&lt;li&gt;solder and soldering iron&lt;/li&gt;
&lt;li&gt;sockets (optional but handy)&lt;/li&gt;
&lt;li&gt;WS12811/2 lights/neopixels&lt;/li&gt;
&lt;li&gt;5v power supply&lt;/li&gt;
&lt;li&gt;74AHCT125 Quad Level-Shifter or 74HCT245&lt;/li&gt;
&lt;li&gt;double-sided tape&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;assembly&#34;&gt;
    &lt;a href=&#34;#assembly&#34; class=&#34;anchor&#34;&gt;
        &lt;svg class=&#34;icon&#34; aria-hidden=&#34;true&#34; focusable=&#34;false&#34; height=&#34;16&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 16 16&#34; width=&#34;16&#34;&gt;
            &lt;path fill-rule=&#34;evenodd&#34;
                d=&#34;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&#34;&gt;
            &lt;/path&gt;
        &lt;/svg&gt;
    &lt;/a&gt;
    Assembly
&lt;/h1&gt;
&lt;p&gt;I installed header pins to the Raspberry Pi. It helps with stability and give
some more wiggle room for mistakes.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; 
    src=&#34;https://fromtheterminal.com/barlights/raspberry_pi_header.jpg&#34; 
    alt=&#34;raspberry pi header&#34; 
     
    width=4032 
    height=&#34;3024&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;The breadboard used here is connected like a solderless breadboard. I attached
the 74AHCT125 Quad Level-Shifter and the rest of the wiring as described in the
above schematic. Going back, I would use sockets to attach the 74AHCT125 and not
just the Raspberry Pi.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; 
    src=&#34;https://fromtheterminal.com/barlights/74AHCT125.jpg&#34; 
    alt=&#34;74AHCT125&#34; 
     
    width=3226 
    height=&#34;2419&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; 
    src=&#34;https://fromtheterminal.com/barlights/soldered.jpg&#34; 
    alt=&#34;soldered&#34; 
     
    width=4032 
    height=&#34;3024&#34;  /&gt;&lt;/p&gt;
&lt;h1 id=&#34;installing-into-the-bar&#34;&gt;
    &lt;a href=&#34;#installing-into-the-bar&#34; class=&#34;anchor&#34;&gt;
        &lt;svg class=&#34;icon&#34; aria-hidden=&#34;true&#34; focusable=&#34;false&#34; height=&#34;16&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 16 16&#34; width=&#34;16&#34;&gt;
            &lt;path fill-rule=&#34;evenodd&#34;
                d=&#34;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&#34;&gt;
            &lt;/path&gt;
        &lt;/svg&gt;
    &lt;/a&gt;
    Installing into the bar
&lt;/h1&gt;
&lt;p&gt;With some double-sided tape, I installed everything underneath the bar.
Everything is pretty light and should hold fine. I will move all the power cords
to the side with some clips in the near future.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; 
    src=&#34;https://fromtheterminal.com/barlights/installed_1.jpg&#34; 
    alt=&#34;installed_1&#34; 
     
    width=4032 
    height=&#34;3024&#34;  /&gt;
&lt;img loading=&#34;lazy&#34; 
    src=&#34;https://fromtheterminal.com/barlights/installed_2.jpg&#34; 
    alt=&#34;installed_2&#34; 
     
    width=4032 
    height=&#34;3024&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;The color in person is not washed out like it is in the video.&lt;/p&gt;
&lt;video controls=&#34;controls&#34; width=&#34;100%&#34; name=&#34;lights on&#34;&gt;
  &lt;source src=&#34;https://fromtheterminal.com/barlights/lightson.mp4&#34;&gt;
&lt;/video&gt;
&lt;h1 id=&#34;trouble-shooting&#34;&gt;
    &lt;a href=&#34;#trouble-shooting&#34; class=&#34;anchor&#34;&gt;
        &lt;svg class=&#34;icon&#34; aria-hidden=&#34;true&#34; focusable=&#34;false&#34; height=&#34;16&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 16 16&#34; width=&#34;16&#34;&gt;
            &lt;path fill-rule=&#34;evenodd&#34;
                d=&#34;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&#34;&gt;
            &lt;/path&gt;
        &lt;/svg&gt;
    &lt;/a&gt;
    Trouble Shooting
&lt;/h1&gt;
&lt;p&gt;I actually worked through putting together the hardware four times before having
this final working solution. The first time I set everything up using a solderless
breadboard. This worked fine, but I wanted something a little more permanent.&lt;/p&gt;
&lt;h2 id=&#34;physics-hard&#34;&gt;
    &lt;a href=&#34;#physics-hard&#34; class=&#34;anchor&#34;&gt;
        &lt;svg class=&#34;icon&#34; aria-hidden=&#34;true&#34; focusable=&#34;false&#34; height=&#34;16&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 16 16&#34; width=&#34;16&#34;&gt;
            &lt;path fill-rule=&#34;evenodd&#34;
                d=&#34;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&#34;&gt;
            &lt;/path&gt;
        &lt;/svg&gt;
    &lt;/a&gt;
    Physics Hard
&lt;/h2&gt;
&lt;p&gt;The second attempt was soldering everything to the Raspberry Pi directly and
connecting it to a smaller breadboard. I then used approximately 11 ft of 22
gauge wire to connect to the power supply. Turns out that there is not enough
power getting to the NeoPixels in this fashion.&lt;/p&gt;
&lt;p&gt;This is the start of me realizing that maybe installing sockets was a good idea.&lt;/p&gt;
&lt;h2 id=&#34;soldering-hard&#34;&gt;
    &lt;a href=&#34;#soldering-hard&#34; class=&#34;anchor&#34;&gt;
        &lt;svg class=&#34;icon&#34; aria-hidden=&#34;true&#34; focusable=&#34;false&#34; height=&#34;16&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 16 16&#34; width=&#34;16&#34;&gt;
            &lt;path fill-rule=&#34;evenodd&#34;
                d=&#34;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&#34;&gt;
            &lt;/path&gt;
        &lt;/svg&gt;
    &lt;/a&gt;
    Soldering Hard
&lt;/h2&gt;
&lt;p&gt;I do not have a lot of experience soldering and ran across a few issues that
caused me problems.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;My soldering iron is in Fahrenheit. For some reason I thought it was Celsius.
And I was wondering why I kept getting cold joints&amp;hellip;&lt;/li&gt;
&lt;li&gt;Kept creating cold joints, even after setting the correct temperature.&lt;/li&gt;
&lt;li&gt;I&amp;rsquo;m a terrible planner &amp;ndash; &lt;strong&gt;use sockets&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Though I didn&amp;rsquo;t find any shorts from my shabby soldering, I do think that the
cold joints caused too much resistance. Also, I&amp;rsquo;m glad I used sockets on the
Raspberry Pi, wish I used it on the level shifter.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; 
    src=&#34;https://fromtheterminal.com/barlights/failed_1.jpg&#34; 
    alt=&#34;soldered&#34; 
     
    width=3024 
    height=&#34;4032&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;I have built a couple of working keyboards. With the way my soldering has been,
I am surprised they work.&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://learn.adafruit.com/assets/64121&#34;&gt;led strips raspi neopixel level shifted&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;

    </description>
    </item>
    
    <item>
    <title>Building a Light Display - Part I</title>
    <link>https://fromtheterminal.com/post/barlights_part_1/</link>
    <pubDate>Sun, 26 Dec 2021 00:00:00 +0000</pubDate>
    <author>hackerman</author>
    <guid>https://fromtheterminal.com/post/barlights_part_1/</guid>
    <description>
        &lt;h1 id=&#34;introduction&#34;&gt;
    &lt;a href=&#34;#introduction&#34; class=&#34;anchor&#34;&gt;
        &lt;svg class=&#34;icon&#34; aria-hidden=&#34;true&#34; focusable=&#34;false&#34; height=&#34;16&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 16 16&#34; width=&#34;16&#34;&gt;
            &lt;path fill-rule=&#34;evenodd&#34;
                d=&#34;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&#34;&gt;
            &lt;/path&gt;
        &lt;/svg&gt;
    &lt;/a&gt;
    Introduction
&lt;/h1&gt;
&lt;p&gt;In my apartment is a small built in desk that I have converted into a
bar. This was done by simply adding some liquor bottles and a Boston
shaker. So now that we both have a bar, it might be nice to light the
bar up with individually addressable LEDs. The following series of
posts will discuss how to set up a Raspberry Pi, hook up the
NeoPixels (ws2811) to the Raspberry Pi, create an API with Go,
connect to the API with iPhone shortcuts, and finally how to make a
cocktail to enjoy.&lt;/p&gt;
&lt;h2 id=&#34;hardware&#34;&gt;
    &lt;a href=&#34;#hardware&#34; class=&#34;anchor&#34;&gt;
        &lt;svg class=&#34;icon&#34; aria-hidden=&#34;true&#34; focusable=&#34;false&#34; height=&#34;16&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 16 16&#34; width=&#34;16&#34;&gt;
            &lt;path fill-rule=&#34;evenodd&#34;
                d=&#34;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&#34;&gt;
            &lt;/path&gt;
        &lt;/svg&gt;
    &lt;/a&gt;
    Hardware
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A Raspberry Pi - I used a &lt;a href=&#34;https://www.raspberrypi.com/products/raspberry-pi-zero-w/&#34;&gt;Raspberry Pi Zero W&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3.5v power supply&lt;/li&gt;
&lt;li&gt;SD Card&lt;/li&gt;
&lt;li&gt;Breadboard&lt;/li&gt;
&lt;li&gt;22 gauge solid core wire&lt;/li&gt;
&lt;li&gt;solder and soldering iron&lt;/li&gt;
&lt;li&gt;sockets (optional but handy)&lt;/li&gt;
&lt;li&gt;WS12811/2 lights/neopixels&lt;/li&gt;
&lt;li&gt;5v power supply&lt;/li&gt;
&lt;li&gt;74AHCT125 Quad Level-Shifter or 74HCT245.&lt;/li&gt;
&lt;li&gt;double sided tape&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;software&#34;&gt;
    &lt;a href=&#34;#software&#34; class=&#34;anchor&#34;&gt;
        &lt;svg class=&#34;icon&#34; aria-hidden=&#34;true&#34; focusable=&#34;false&#34; height=&#34;16&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 16 16&#34; width=&#34;16&#34;&gt;
            &lt;path fill-rule=&#34;evenodd&#34;
                d=&#34;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&#34;&gt;
            &lt;/path&gt;
        &lt;/svg&gt;
    &lt;/a&gt;
    Software
&lt;/h2&gt;
&lt;p&gt;And on the computer where we will write the software we will use&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;docker&lt;/li&gt;
&lt;li&gt;Go, I used &lt;code&gt;go1.17.5&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ssh&lt;/li&gt;
&lt;li&gt;curl&lt;/li&gt;
&lt;li&gt;some shell&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;some-useful-references&#34;&gt;
    &lt;a href=&#34;#some-useful-references&#34; class=&#34;anchor&#34;&gt;
        &lt;svg class=&#34;icon&#34; aria-hidden=&#34;true&#34; focusable=&#34;false&#34; height=&#34;16&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 16 16&#34; width=&#34;16&#34;&gt;
            &lt;path fill-rule=&#34;evenodd&#34;
                d=&#34;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&#34;&gt;
            &lt;/path&gt;
        &lt;/svg&gt;
    &lt;/a&gt;
    Some Useful References
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://learn.adafruit.com/adafruit-neopixel-uberguide/best-practices&#34;&gt;Neo Pixel Best Practices&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/rpi-ws281x/rpi-ws281x-go&#34;&gt;rpi-ws281x-go GitHub Page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pkg.go.dev/github.com/rpi-ws281x/rpi-ws281x-go?utm_source=godoc&#34;&gt;rpi-ws281x-go Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jgarff/rpi_ws281x#build&#34;&gt;rpi-ws281x GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;installing-raspberry-pi-os-lite&#34;&gt;
    &lt;a href=&#34;#installing-raspberry-pi-os-lite&#34; class=&#34;anchor&#34;&gt;
        &lt;svg class=&#34;icon&#34; aria-hidden=&#34;true&#34; focusable=&#34;false&#34; height=&#34;16&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 16 16&#34; width=&#34;16&#34;&gt;
            &lt;path fill-rule=&#34;evenodd&#34;
                d=&#34;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&#34;&gt;
            &lt;/path&gt;
        &lt;/svg&gt;
    &lt;/a&gt;
    Installing Raspberry Pi OS Lite
&lt;/h1&gt;
&lt;p&gt;We could download the latest &lt;a href=&#34;https://www.raspberrypi.com/software/operating-systems/#raspberry-pi-os-32-bit&#34;&gt;Raspberry Pi OS
Lite&lt;/a&gt;,
use &lt;code&gt;dd&lt;/code&gt; to image the SD card, then modify/add a few files to get what we
need&amp;hellip; or we could use the &lt;a href=&#34;https://www.raspberrypi.com/software/&#34;&gt;Raspberry Pi
Imager&lt;/a&gt; and have Wi-Fi and ssh enabled
for us with a few clicks. Normally I would prefer to do things via the
command line, but in this instance it will save us a some time. Though it does
feel a bit odd considering this blog is called &lt;em&gt;From the Terminal&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Insert the SD card into your desktop and open up the Raspberry Pi Imager&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; 
    src=&#34;https://fromtheterminal.com/barlights/rpi.png&#34; 
    alt=&#34;Raspberry Pi Imager&#34; 
     
    width=690 
    height=&#34;454&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;and press &lt;kbd&gt;&lt;kbd&gt;CTRL&lt;/kbd&gt;+&lt;kbd&gt;SHIFT&lt;/kbd&gt;+&lt;kbd&gt;x&lt;/kbd&gt;&lt;/kbd&gt; to get the advanced menu. Set the hostname, enable
ssh, set the &amp;lsquo;pi&amp;rsquo; user password, configure the Wi-Fi settings, and make sure the
correct time zone is set.&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; 
    src=&#34;https://fromtheterminal.com/barlights/rpi-advanced-settings.png&#34; 
    alt=&#34;Raspberry Pi Imager Advanced Settings&#34; 
     
    width=690 
    height=&#34;1075&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;Then choose the OS, I have chosen to use &lt;code&gt;Operating System-&amp;gt;Raspberry Pi OS (other)-&amp;gt;Raspberry Pi OS Lite (32-bit)&lt;/code&gt;, but it should be fine to choose any
others. With the SD card plugged into our computer, select the desired device and then click write. There should be a
prompt for the password, and it should specify the disk. &lt;strong&gt;Double check that it
is the correct disk!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img loading=&#34;lazy&#34; 
    src=&#34;https://fromtheterminal.com/barlights/rpi-auth.png&#34; 
    alt=&#34;Raspberry Pi Imager Auth&#34; 
     
    width=690 
    height=&#34;675&#34;  /&gt;&lt;/p&gt;
&lt;p&gt;Put the SD card in the Raspberry Pi and boot. If configured correctly, it
should join the Wi-Fi network specified. The IP can be found via the networks
router or find the device with &lt;code&gt;nmap&lt;/code&gt; with the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# ip needs to be your network&lt;/span&gt;
nmap -sn 192.168.1.0/24
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Then confirm that we can connect to the device by using &lt;code&gt;ssh&lt;/code&gt; and using the
device address. As an example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ssh pi@192.168.1.172
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;setting-up-a-dev-environment&#34;&gt;
    &lt;a href=&#34;#setting-up-a-dev-environment&#34; class=&#34;anchor&#34;&gt;
        &lt;svg class=&#34;icon&#34; aria-hidden=&#34;true&#34; focusable=&#34;false&#34; height=&#34;16&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 16 16&#34; width=&#34;16&#34;&gt;
            &lt;path fill-rule=&#34;evenodd&#34;
                d=&#34;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&#34;&gt;
            &lt;/path&gt;
        &lt;/svg&gt;
    &lt;/a&gt;
    Setting Up a Dev Environment
&lt;/h1&gt;
&lt;p&gt;We will be using Go and the package
&lt;a href=&#34;https://github.com/rpi-ws281x/rpi-ws281x-go&#34;&gt;rpi-ws281x-go&lt;/a&gt; to
program the lights. It is a good idea to develop on a different
machine than on the Raspberry Pi, which means we need to cross
compile. Normally this is easy with Go, but because we need to use
some c libraries it is recommended to use a container to cross
compile. &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; It is probably best to follow the library&amp;rsquo;s
documentation, but I will provide the steps I followed.&lt;/p&gt;
&lt;p&gt;We first grab the &lt;code&gt;Dockerfile&lt;/code&gt; and use &lt;code&gt;buildx&lt;/code&gt;. The platform may need to
be changed to whichever Raspberry Pi is being used. For the Raspberry
Pi 0 W it is &lt;code&gt;linux/arm/v6&lt;/code&gt;. I did have some troubles on this step which
I discuss &lt;a href=&#34;#troubleshooting&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl https://raw.githubusercontent.com/rpi-ws281x/rpi-ws281x-go/master/docker/app-builder/Dockerfile -o Dockerfile
docker buildx build --platform linux/arm/v6 --tag ws2811-builder --file ./Dockerfile .
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Then just to test we have the correct setup we can build their
example project &lt;code&gt;swiss&lt;/code&gt;. Inside some &lt;code&gt;tmp/&lt;/code&gt; directory, download their
example, make a &lt;code&gt;go.mod&lt;/code&gt; file, and build the project with the
following&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl https://raw.githubusercontent.com/rpi-ws281x/rpi-ws281x-go/master/examples/swiss/swiss.go -o swiss.go
go mod init swiss
go mod tidy
&lt;span class=&#34;nv&#34;&gt;APP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;swiss
docker run --rm -v &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$PWD&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;:/usr/src/&lt;span class=&#34;nv&#34;&gt;$APP&lt;/span&gt; --platform linux/arm/v6 &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;  -w /usr/src/&lt;span class=&#34;nv&#34;&gt;$APP&lt;/span&gt; ws2811-builder:latest go build -o &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$APP&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;-armv6&amp;#34;&lt;/span&gt; -v
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;To check if we can actually run it we copy it over to the Raspberry Pi&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;scp swiss-armv6 pi@192.168.1.172:~
ssh pi@192.168.1.172
sudo swiss-armv6
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h1 id=&#34;troubleshooting&#34;&gt;
    &lt;a href=&#34;#troubleshooting&#34; class=&#34;anchor&#34;&gt;
        &lt;svg class=&#34;icon&#34; aria-hidden=&#34;true&#34; focusable=&#34;false&#34; height=&#34;16&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 16 16&#34; width=&#34;16&#34;&gt;
            &lt;path fill-rule=&#34;evenodd&#34;
                d=&#34;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&#34;&gt;
            &lt;/path&gt;
        &lt;/svg&gt;
    &lt;/a&gt;
    Troubleshooting
&lt;/h1&gt;
&lt;h2 id=&#34;issues-with-building-buildx&#34;&gt;
    &lt;a href=&#34;#issues-with-building-buildx&#34; class=&#34;anchor&#34;&gt;
        &lt;svg class=&#34;icon&#34; aria-hidden=&#34;true&#34; focusable=&#34;false&#34; height=&#34;16&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 16 16&#34; width=&#34;16&#34;&gt;
            &lt;path fill-rule=&#34;evenodd&#34;
                d=&#34;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&#34;&gt;
            &lt;/path&gt;
        &lt;/svg&gt;
    &lt;/a&gt;
    Issues with building buildx
&lt;/h2&gt;
&lt;!-- https://github.com/docker/buildx/issues/57 --&gt;
&lt;p&gt;I had issue with the correct architectures not showing up (in particular
&lt;code&gt;linux/arm/v6&lt;/code&gt;). This turned out to be an issue with &lt;code&gt;binfmt&lt;/code&gt; not having
everything it needed for &lt;code&gt;buildx&lt;/code&gt;. Solved this on Arch Linux by installing the
following packages.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Install &lt;code&gt;binfmt-qemu-static&lt;/code&gt;&lt;sup&gt;AUR&lt;/sup&gt; and
&lt;code&gt;qemu-user-static&lt;/code&gt;&lt;sup&gt;AUR&lt;/sup&gt; from the AUR on the x86_64 machine/host.
&lt;code&gt;binfmt-qemu-static&lt;/code&gt; will take care of registering the &lt;code&gt;qemu&lt;/code&gt; binaries to &lt;code&gt;binfmt&lt;/code&gt;
service.  &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;issues-with-running-swiss-example&#34;&gt;
    &lt;a href=&#34;#issues-with-running-swiss-example&#34; class=&#34;anchor&#34;&gt;
        &lt;svg class=&#34;icon&#34; aria-hidden=&#34;true&#34; focusable=&#34;false&#34; height=&#34;16&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 16 16&#34; width=&#34;16&#34;&gt;
            &lt;path fill-rule=&#34;evenodd&#34;
                d=&#34;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&#34;&gt;
            &lt;/path&gt;
        &lt;/svg&gt;
    &lt;/a&gt;
    Issues with running swiss example
&lt;/h2&gt;
&lt;p&gt;The examples given were for &lt;code&gt;linux/arm/v7&lt;/code&gt; and the Raspberry Pi W required
&lt;code&gt;linux/arm/v6&lt;/code&gt;. I needed to cross compile to the correct architecture? Who would
have thought that.&lt;/p&gt;
&lt;h1 id=&#34;updates&#34;&gt;
    &lt;a href=&#34;#updates&#34; class=&#34;anchor&#34;&gt;
        &lt;svg class=&#34;icon&#34; aria-hidden=&#34;true&#34; focusable=&#34;false&#34; height=&#34;16&#34; version=&#34;1.1&#34; viewBox=&#34;0 0 16 16&#34; width=&#34;16&#34;&gt;
            &lt;path fill-rule=&#34;evenodd&#34;
                d=&#34;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&#34;&gt;
            &lt;/path&gt;
        &lt;/svg&gt;
    &lt;/a&gt;
    Updates
&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;2022-01-19: Corrected some spelling and grammar.&lt;/li&gt;
&lt;/ul&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;It is not required to know how to write a &lt;a href=&#34;https://www.docker.com/resources/what-container&#34;&gt;Docker
Image&lt;/a&gt;. We will simply
be using a preexisting image and later making minor changes to save some
time.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://wiki.archlinux.org/title/QEMU&#34;&gt;Arch Wiki&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;

    </description>
    </item>
    
  </channel>
</rss>
